{"remainingRequest":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/thread-loader/dist/cjs.js!/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/babel-loader/lib/index.js!/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/src/views/database/index.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/src/views/database/index.vue","mtime":1671438929000},{"path":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/babel.config.js","mtime":1671438929000},{"path":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/cache-loader/dist/cjs.js","mtime":1715570484549},{"path":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/thread-loader/dist/cjs.js","mtime":1715570466495},{"path":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/babel-loader/lib/index.js","mtime":1715570465906},{"path":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/cache-loader/dist/cjs.js","mtime":1715570484549},{"path":"/Users/cigar/Downloads/SnowSword-main/FrontEnd/snowsword/node_modules/vue-loader/lib/index.js","mtime":1715570461633}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}